
# Keep the connection alive if idle for a long time (need in production)
spring.datasource.dbcp2.test-while-idle=true
spring.datasource.dbcp2.validation-query=SELECT 1



## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.initial-size=10
spring.datasource.tomcat.min-idle=5
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=select 1;
spring.datasource.tomcat.time-between-eviction-runs-millis=600000
spring.datasource.tomcat.min-evictable-idle-time-millis=300000


spring.datasource.url=jdbc:postgresql://localhost:5432/usuario
spring.jpa.properties.org.hibernate.envers.default_schema=event_log
spring.jpa.properties.javax.persistence.schema-generation.database.action=validate

# Username and password
spring.datasource.username=usuario
spring.datasource.password=usuario


# Hibernate ddl auto (create, create-drop, validate, update)
# JPA / Hibernate
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-action=update
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


# Flyway
flyway.locations=classpath:/data/postgres/migration
flyway.url=jdbc:postgresql://localhost:5432
flyway.schemas=usuario
spring.flyway.user=usuario
spring.flyway.password=usuario
spring.flyway.locations=classpath:data/postgres/migration

spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=false
logging.level.org.flywaydb=INFO


# check every 30s if a conn in the pool is still alive
spring.datasource.hikari.keepaliveTime=30000



# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.sql.init.encoding=UTF-8
spring.jpa.open-in-view=false
spring.main.allow-bean-definition-overriding=true

spring.jpa.properties.javax.persistence.schema-generation.scripts.action=none
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=script_drop-and-create_schema.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=scrip_drop-and-create.sql
spring.devtools.add-properties=false

# test query to exec when checking conn is alive
spring.datasource.hikari.connectionTestQuery=SELECT 1



# logs for aplicattion
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss} - %msg%n
logging.pattern.file="%d{dd-MM-yyyy} [%thread] %-5level %logger{36} - %msg%n"
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
logging.file.name=hibernate_log_file.log
logging.level.org.hibernate=INFO
logging.level.web=DEBUG


# PLEASE, FOR YOU HELP, DON'T REMOVE THIS ABOVE LINE,
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=TRACE
org.springframework.web.level="DEBUG"
debug=false
logging.level.org.springframework.web=DEBUG